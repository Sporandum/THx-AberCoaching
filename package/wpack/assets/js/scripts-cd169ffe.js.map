{"version":3,"sources":["webpack:///./src/js/modules/MobileMenu.js","webpack:///./src/js/modules/MenuLink.js","webpack:///./src/js/main-scripts.js"],"names":["MobileMenu","this","menuIcon","document","getElementById","burgerIcon","menuContent","menuItems","getElementsByTagName","menuState","isOpen","events","addEventListener","toggleMobileMenu","closeMobileMenu","window","debounce","console","log","isMobil","foo","getComputedStyle","display","classList","add","remove","openMobileMenu","MenuLink","sectionID","isScrollTarget","sectionEl","getSectionEl","sectionTitleEl","getSectionTitleEl","matchingLink","getMatchingLink","menuHeight","menuOffset","linkIsActive","throttle","runOnScroll","onDocumentLoad","e","onClickOnLink","querySelector","getAttribute","elScrollY","getBoundingClientRect","y","elScrollYLimit","height","scrollTo","offsetTop","preventDefault","scrollToLink","history","replaceState","location","origin","href","Glide","gap","mount"],"mappings":"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","file":"js/scripts-cd169ffe.js","sourcesContent":["import { debounce } from 'lodash'\r\n\r\nclass MobileMenu {\r\n  constructor() {\r\n    this.menuIcon = document.getElementById('site-header__menu-icon')\r\n    this.burgerIcon = document.getElementById('burger-icon')\r\n    this.menuContent = document.getElementById('site-header__menu-content')\r\n    this.menuItems = this.menuContent.getElementsByTagName('li')\r\n    this.menuState = {}\r\n    this.menuState.isOpen = false\r\n    this.events()\r\n  }\r\n  // Events\r\n  events() {\r\n    this.menuIcon.addEventListener('click', () => this.toggleMobileMenu())\r\n\r\n    for (let item of this.menuItems) {\r\n      item.addEventListener('click', () => this.closeMobileMenu())\r\n    }\r\n\r\n    window.addEventListener('resize', debounce(() => {\r\n      console.log('MobileMenu resize : RUN')\r\n      if (this.menuState.isOpen && !this.isMobil()) {\r\n        this.closeMobileMenu()\r\n      }\r\n    }, 200))\r\n  }\r\n\r\n\r\n  // Methods\r\n  isMobil() {\r\n    let foo = getComputedStyle(this.menuIcon).display\r\n    if (foo === 'none') {\r\n      return false\r\n    }\r\n    if (foo === 'block') {\r\n      return true\r\n    }\r\n  }\r\n\r\n  openMobileMenu() {\r\n    this.menuContent.classList.add('site-header__menu-content--is-visible')\r\n    this.burgerIcon.classList.add('burger-icon--close-x')\r\n    this.menuState.isOpen = true\r\n  }\r\n\r\n  closeMobileMenu() {\r\n    this.menuContent.classList.remove('site-header__menu-content--is-visible')\r\n    this.burgerIcon.classList.remove('burger-icon--close-x')\r\n    this.menuState.isOpen = false\r\n  }\r\n\r\n  toggleMobileMenu() {\r\n    if (!this.menuState.isOpen && this.isMobil()) {\r\n      this.openMobileMenu()\r\n    } else {\r\n      this.closeMobileMenu()\r\n    }\r\n  }\r\n}\r\n\r\nexport default MobileMenu","import { throttle } from 'lodash'\r\n\r\nclass MenuLink {\r\n  constructor(sectionID, isScrollTarget = true) {\r\n    this.sectionID = sectionID\r\n    this.sectionEl = this.getSectionEl()\r\n    this.sectionTitleEl = this.getSectionTitleEl()\r\n    this.matchingLink = this.getMatchingLink()\r\n    this.isScrollTarget = isScrollTarget\r\n    this.menuHeight = 100\r\n    this.menuOffset = this.menuHeight * 1.5\r\n    this.linkIsActive = false\r\n    this.events()\r\n  }\r\n  // Events\r\n  events() {\r\n    if (this.sectionEl && this.matchingLink) {\r\n      document.addEventListener('scroll', throttle(() => this.runOnScroll(), 200))\r\n      if (this.isScrollTarget) {\r\n        window.addEventListener('load', () => this.onDocumentLoad())\r\n        this.matchingLink.addEventListener('click', e => this.onClickOnLink(e))\r\n      }\r\n    }\r\n  }\r\n\r\n  // Methods\r\n  getSectionEl() {\r\n    if (document.getElementById(this.sectionID)) {\r\n      return document.getElementById(this.sectionID)\r\n    }\r\n  }\r\n\r\n  getSectionTitleEl() {\r\n    if (this.sectionEl) {\r\n      return this.sectionEl.querySelector('h2')\r\n    }\r\n  }\r\n\r\n  getMatchingLink() {\r\n    if (this.sectionEl) {\r\n      if (document.querySelector(this.sectionEl.getAttribute('data-matching-link'))) {\r\n        return document.querySelector(this.sectionEl.getAttribute('data-matching-link'))\r\n      }\r\n    }\r\n  }\r\n\r\n  runOnScroll() {\r\n    let elScrollY = this.sectionEl.getBoundingClientRect().y\r\n    let elScrollYLimit = (this.sectionEl.getBoundingClientRect().height - this.menuOffset) * -1\r\n    // console.log(`${this.sectionID} : RUN`)\r\n\r\n    if (elScrollY < this.menuOffset && elScrollY > elScrollYLimit && !this.linkIsActive) {\r\n      this.matchingLink.classList.add('current-menu-item')\r\n      this.linkIsActive = true\r\n      // console.log(`${this.sectionID} : ON`)\r\n    }\r\n\r\n    if (elScrollY > this.menuOffset || elScrollY < elScrollYLimit) {\r\n      if (this.linkIsActive) {\r\n        this.matchingLink.classList.remove('current-menu-item')\r\n        this.linkIsActive = false\r\n        // console.log(`${this.sectionID} : OFF`)\r\n      }\r\n    }\r\n  }\r\n\r\n  scrollToLink() {\r\n    window.scrollTo(0, this.sectionTitleEl.offsetTop - this.menuHeight)\r\n  }\r\n\r\n  onClickOnLink(e) {\r\n    e.preventDefault()\r\n    this.scrollToLink()\r\n    window.history.replaceState('', this.sectionID , window.location.origin + '/#' + this.sectionID)\r\n  }\r\n  \r\n  onDocumentLoad() {\r\n    let seekedUrl = window.location.origin + '/#' + this.sectionID\r\n\r\n    if (seekedUrl === window.location.href) {\r\n      this.scrollToLink()\r\n    } \r\n  }\r\n}\r\n\r\nexport default MenuLink","import MobileMenu from './modules/MobileMenu'\r\nimport MenuLink from './modules/MenuLink'\r\nimport Glide from '@glidejs/glide'\r\n\r\nnew MobileMenu()\r\n\r\nnew MenuLink('presentation')\r\nnew MenuLink('services')\r\nnew MenuLink('last-posts', false)\r\nnew MenuLink('contact')\r\n\r\n\r\n// Init testimonials slider on front page\r\nif(document.getElementById('testimonials')) {\r\n  new Glide('.glide', {\r\n    gap: 200\r\n  }).mount()\r\n}"],"sourceRoot":""}